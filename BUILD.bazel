load("@py_deps//:requirements.bzl", "requirement")
load("@rules_python//python:defs.bzl", "py_binary", "py_runtime", "py_runtime_pair", "py_test")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@io_bazel_rules_docker//container:image.bzl", "container_image")
load("@io_bazel_rules_docker//python3:image.bzl", "py3_image")
load("@rules_foreign_cc//foreign_cc:defs.bzl", "configure_make")

configure_make(
    name = "python3.8",
    install_prefix = "pybuild",
    lib_source = "@python3.8//:all_srcs",
    out_bin_dir = "pybuild/bin",
    out_headers_only = True,
    out_include_dir = "pybuild/include",
)

py_runtime(
    name = "python3_runtime",
    files = ["@python_interpreter//:files"],
    interpreter = "@python_interpreter//:python_bin",
    python_version = "PY3",
    visibility = ["//visibility:public"],
)

py_runtime_pair(
    name = "my_py_runtime_pair",
    py2_runtime = None,
    py3_runtime = ":python3_runtime",
)

toolchain(
    name = "my_py_toolchain",
    toolchain = ":my_py_runtime_pair",
    toolchain_type = "@bazel_tools//tools/python:toolchain_type",
)

py_binary(
    name = "main",
    srcs = ["main.py"],
    python_version = "PY3",
    deps = [requirement("psycopg2-binary")],
)

py_test(
    name = "main_test",
    srcs = ["main_test.py"],
    deps = [
        requirement("attrs"),
        requirement("more-itertools"),
        requirement("packaging"),
        requirement("pluggy"),
        requirement("py"),
        requirement("pytest"),
        requirement("wcwidth"),
    ],
)

####################
# Docker Image
####################

# TODO: this pulls in WAY TOO MUCH, it has idle and pip and all the tests, etc.
pkg_tar(
    name = "python_tar",
    srcs = ["//:python3.8"],
    mode = "0644",
    package_dir = "/opt",
    visibility = ["//visibility:private"],
)

container_image(
    name = "python_base_image",
    base = "@debian_slim//image",
    # our tar places python3 under /opt, but the host
    # toolchain used by py3_image might use /usr/bin instead.
    symlinks = {
        "/usr/bin/python": "/opt/python3.8/bin/python3",
        "/usr/bin/python3": "/opt/python3.8/bin/python3",
    },
    tars = [":python_tar"],
)

py3_image(
    name = "main_image",
    srcs = ["main.py"],
    base = ":python_base_image",
    # Bazel injected init files can break python import (for PY3).
    # https://github.com/bazelbuild/rules_python/issues/55
    legacy_create_init = False,
    main = "main.py",
    deps = [requirement("psycopg2-binary")],
)
